<Page x:Class="wpftdm.Views.Home"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:utl="clr-namespace:wpftdm.Util"
        xmlns:core="clr-namespace:wpftdm.Core"
      mc:Ignorable="d" 
	Title="Home" DataContext="{Binding HomeViewModel, Source={StaticResource Locator}}">


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="0" Grid.Column="0">

                <Grid.ColumnDefinitions >

                    <ColumnDefinition Width="40"/>

                    <ColumnDefinition Width="12"/>

                    <ColumnDefinition Width="40"/>

                    <ColumnDefinition Width="12"/>

                    <ColumnDefinition Width="40" />

                    <ColumnDefinition Width="60"/>

                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="150"/>

                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>

                    <RowDefinition Height="25" />
                    <RowDefinition Height="Auto"/>

                    <RowDefinition Height="25"/>

                </Grid.RowDefinitions>
                <Label Grid.Column="0" Grid.Row="1" Style="{StaticResource h1}" Content="{Binding Source={x:Static utl:RunTimer.Instance},Path=Hrs}" HorizontalAlignment="Left"/>

                <Label Grid.Column="1" Grid.Row="1" Style="{StaticResource h1}" Content=":" />

                <Label Grid.Column="2" Grid.Row="1" Style="{StaticResource h1}" Content="{Binding Source={x:Static utl:RunTimer.Instance},Path=Mins}"  />

                <Label Grid.Column="3" Grid.Row="1" Style="{StaticResource h1}" Content=":" />

                <Label Grid.Column="4" Grid.Row="1" Style="{StaticResource h1}" Content="{Binding Source={x:Static utl:RunTimer.Instance},Path=Secs}"  />

                <Button Grid.Column="5" Grid.Row="1" Height="24" Width="60" VerticalAlignment="Center" Content="Start" Command="{Binding StartTimerCmd}" Visibility="{Binding Source={x:Static utl:RunTimer.Instance},Path=Status, Converter={StaticResource ResourceKey=enumToVisibilityConverter}, ConverterParameter='stopped, completed'}" Margin="0" />

                <Button Grid.Column="5" Grid.Row="1" Height="24" Width="60" VerticalAlignment="Center" Content="Reset" Command="{Binding ResetTimerCmd}" Visibility="{Binding Source={x:Static utl:RunTimer.Instance},Path=Status, Converter={StaticResource ResourceKey=enumToVisibilityConverter}, ConverterParameter='resting, running'}" Margin="0"  />

                <Button Grid.Column="6" Grid.Row="1" Height="24"  Width="60" VerticalAlignment="Center" Content="{Binding IsTimerPaused}" Command="{Binding PauseTimerCmd}" Margin="0"  />

                <Grid Grid.Row="0" Grid.Column="10" Grid.RowSpan="3">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="24" />
                        <RowDefinition Height="24" />
                        <RowDefinition Height="24" />
                        <RowDefinition Height="24"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="90"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Content="Continue:" Grid.Column="0" VerticalAlignment="Center" Height="16" Margin="0,4,0,0" ></Label>
                    <CheckBox Grid.Row="0" Grid.Column="1" IsChecked="{Binding Source={x:Static utl:RunTimer.Instance},Path=ContinuePlay}" VerticalAlignment="Center" Height="16" Margin="0,4,0,0" />
                    <Label Grid.Row="1" Grid.Column="0" Content="Status" VerticalAlignment="Center" Height="16" Margin="0,10,0,4"></Label>
                    <Label Grid.Row="1" Grid.Column="1" Content="{Binding Source={x:Static utl:RunTimer.Instance},Path=Status}" Style="{StaticResource h3}" VerticalAlignment="Top" Height="31" Margin="0,0,-25,0" Grid.RowSpan="2" />
                    <Label Content="Ticker:" HorizontalAlignment="Left" Grid.Row="2" VerticalAlignment="Center" Height="16" Margin="0,0,0,12" Width="34" Grid.RowSpan="2"/>
                    <CheckBox Grid.Column="1" HorizontalAlignment="Left" IsChecked="{Binding Source={x:Static utl:RunTimer.Instance},Path=PlayTickerSound}" Grid.Row="2" VerticalAlignment="Center" Height="16" Margin="0,0,0,12" Width="19" Grid.RowSpan="2"/>
                </Grid>
            </Grid>

            <Grid Grid.Row="1" Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="32" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <!--  Drag and Drop Popup  -->
                <Popup x:Name="popup1"
           AllowsTransparency="True"
           IsHitTestVisible="False"
           Placement="RelativePoint"
           PlacementTarget="{Binding ElementName=grdTodoList}">
                    <!--  Your own Popup construction Use properties of DraggedObject inside for Binding  -->
                    <TextBlock Margin="8,0,0,0"
                           VerticalAlignment="Center"
                           FontSize="14"
                           FontWeight="Bold"
                           Text="{Binding Path=Title}" />
                </Popup>
                <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <DataGrid Height="280" IsEnabled="{Binding Source={x:Static utl:RunTimer.Instance},Path=Status, Converter={StaticResource ResourceKey=enumToBoolConverter}, ConverterParameter='stopped, completed'}" x:Name="grdTodoList" ItemsSource="{Binding Todos}" SelectedItem="{Binding CurrentTodo}" SelectionMode="Single" AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" CanUserSortColumns="False" CanUserReorderColumns="False" Grid.Row="0" Grid.Column="0"
                     IsSynchronizedWithCurrentItem="True"
                     utl:DragDropRowBehavior.Enabled="True"
                     utl:DragDropRowBehavior.PopupControl="{Binding ElementName=popup1}"
                     utl:DragDropRowBehavior.OnDragCompleted="{Binding UpdateRowWbsCmd}" AddingNewItem="{core:EventToCommand Command=UpdateTodoCmd, CommandParameter=SelectedItem}">
                        <Control.Resources>
                            <ResourceDictionary>
                                <utl:StringLengthToMarginConverter x:Key="stringLengthToMarginConverter" />
                                <Style TargetType="{x:Type DataGridCell}" x:Key="customMarginCell">
                                    <Setter Property="Margin" Value="{Binding Path=Wbs, Converter={StaticResource stringLengthToMarginConverter}}" />
                                </Style>
                            </ResourceDictionary>
                        </Control.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="WBS" Binding="{Binding Wbs}" IsReadOnly="False" Width="Auto"></DataGridTextColumn>
                            <DataGridTextColumn Header="Title" Binding="{Binding Title}" CellStyle="{StaticResource ResourceKey=customMarginCell}" Width="*"></DataGridTextColumn>
                            <DataGridTextColumn Header="Est." Binding="{Binding Estimated}" Width="10"></DataGridTextColumn>
                            <DataGridTextColumn Header="Exc." Binding="{Binding Executed}" IsReadOnly="True" Width="10"></DataGridTextColumn>
                            <DataGridTemplateColumn Header="Total Time" Width="70">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding TotalTime, Converter={StaticResource ResourceKey=secondsToTimeStringConverter}}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Created" Binding="{Binding CreateDt}" IsReadOnly="True" Width="50"></DataGridTextColumn>
                            <DataGridTextColumn Header="Modified" Binding="{Binding ModifiedDt}" IsReadOnly="True" Width="50"></DataGridTextColumn>
                        </DataGrid.Columns>
                        <DataGrid.InputBindings>
                            <KeyBinding Key="Up" Modifiers="Shift" Command="{Binding RowUpCmd}" CommandParameter="{Binding CurrentTodo}" />
                            <KeyBinding Key="Down" Modifiers="Shift" Command="{Binding RowDownCmd}" CommandParameter="{Binding CurrentTodo}" />
                            <KeyBinding Key="Left" Modifiers="Shift" Command="{Binding RowLeftCmd}" CommandParameter="{Binding CurrentTodo}" />
                            <KeyBinding Key="Right" Modifiers="Shift" Command="{Binding RowRightCmd}" CommandParameter="{Binding CurrentTodo}" />
                            <KeyBinding Key="Delete" Command="{Binding DeleteRowCmd}" CommandParameter="{Binding CurrentTodo}" />
                            <KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveTodoListCmd}" />
                        </DataGrid.InputBindings>

                    </DataGrid>
                </ScrollViewer>
                <StackPanel Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right" Orientation="Horizontal" Height="32">
                    <Button  Content="Save" Command="{Binding SaveTodoListCmd}" Width="50"  Height="32" />
                    <Button  Content="Export" Command="{Binding ExportToExcelCmd}" Width="50" Height="32"  />
                </StackPanel>

            </Grid>

        </Grid>

</Page>
